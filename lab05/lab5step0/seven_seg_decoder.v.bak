module seven_seg_decoder(a,b,c,d,e,f,g,w,x,y,z);
	input z,y,w,x;
	output reg a,b,c,d,e,f,g;
	wire [3:0] in;
	wire [7:0] out;
	always @(z or  y or x or y)
		begin
			assign in[0] = w;
			assign in[1] = x;
			assign in[2] = y;
			assign in[3] = z;
			
			case(in)
				4'b0000: out=7'b0000001
				4'b0001: out=7'b1001111
				4'b0010: out=7'b0010010
				4'b0011: out=7'b0000110
				4'b0100: out=7'b1001100
				4'b0101: out=7'b0100100
				4'b0110: out=7'b0100000
				4'b0111: out=7'b0001111
				4'b1000: out=7'b0000000
				4'b1001: out=7'b0000100
				4'b1010: out=7'b0001000
				4'b1011: out=7'b1100000
				4'b1100: out=7'b0110001
				4'b1101: out=7'b1000010
				4'b1110: out=7'b0110000
				4'b1111: out=7'b0111000
			endcase
		end
	assign a = out[6];
	assign b = out[5];
	assign c = out[4];
	assign d = out[3];
	assign e = out[2];
	assign f = out[1];
	assign g = out[0];
endmodule	